/*
 ============================================================================
 Name        : Memoria.c
 Author      : Servomotor
 Version     :
 Copyright   : Your copyright notice
 Description : Hello World in C, Ansi-style
 ============================================================================
 */

#include <stdio.h>
#include <stdlib.h>
#include <commons/config.h>
#include <commons/log.h>
#include <commons/bitarray.h>

//#define RUTA_LOG "/home/utnso/memoria.log"

t_config* configuracion_memoria;
int puertoMemoria;
int marcos;
int marco_size;
int entradas_cache;
int cache_x_proc;
int retardo_memoria;

typedef struct
{
	char datosMarco[marco_size];
	//Revisar
}t_Memoria;

typedef struct
{
	int marco;
	int pid;
	int num_pag;
}struct_adm_memoria;

void leerConfiguracion(char* ruta);
void inicializarMemoria(char* ruta);

int inicializarPrograma(int pid, int cantPaginas);
int solicitarBytesPagina(int pid,int pagina, int offset, int size);
int almacenarBytesPagina(int pid,int pagina, int offset,int size, char* buffer);
int asignarPaginaAProceso(int pid, int cantPaginas);
int finalizarPrograma(int pid);


int main(void)
{
	return EXIT_SUCCESS;
}

void leerConfiguracion(char* ruta)
{
	configuracion_memoria = config_create(ruta);
	puertoMemoria = config_get_int_value(configuracion_memoria,"PUERTO");
	marcos = config_get_int_value(configuracion_memoria,"MARCOS");
	marco_size = config_get_int_value(configuracion_memoria,"MARCO_SIZE");
	entradas_cache = config_get_int_value(configuracion_memoria,"ENTRADA_CACHE");
	cache_x_proc = config_get_int_value(configuracion_memoria,"CACHE_X_PROC");
	retardo_memoria = config_get_int_value(configuracion_memoria,"RETARDO_MEMORIA");
}

void inicializarMemoria(char* ruta)
{

}
